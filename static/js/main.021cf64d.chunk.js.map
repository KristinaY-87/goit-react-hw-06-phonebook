{"version":3,"sources":["component/Filter/Filter.module.css","component/Section/Section.module.css","redux/contacts-actions.js","component/ContactList/ContactList.js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/Section/Section.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","component/ContactForm/ContactForm.module.css","component/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","changeFilter","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","connect","contacts","items","dispatch","onDeleteContacts","contactsActions","className","styles","title","list","map","item","text","btn","type","onClick","ContactForm","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","onChange","input","pattern","required","Component","currentTarget","Section","children","section","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.021cf64d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2c6LP\",\"input\":\"Filter_input__1Pf1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2__Lt\",\"title\":\"Section_title__3csTZ\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/Add', ({ name, number }) => ({\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n}));\n\nconst deleteContact = createAction('contacts/Delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <>\n    <h2 className={styles.title}>Contacts</h2>\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <span className={styles.text}>\n            {name}: {number}\n          </span>\n\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contacts-actions';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n  handleChange = e => {\n    // console.log(e);\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label className={styles.label}>\n            Name\n            <input\n              value={this.state.name}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              className={styles.input}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label className={styles.label}>\n            Number\n            <input\n              value={this.state.number}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              className={styles.input}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => {\n    return dispatch(contactsActions.addContact(name, number));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\n// import contactsActions from '../../'\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactList from './component/ContactList';\nimport ContactForm from './component/ContactForm';\nimport Filter from './component/Filter';\nimport Section from './component/Section';\nimport './App.css';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n  render() {\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n\n          <Filter />\n          <ContactList />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { combineReducers } from \"redux\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts-reducer';\n\n// console.log(process.env.NODE_ENV);\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__wAax2\",\"label\":\"ContactForm_label__2LV7K\",\"input\":\"ContactForm_input__17EVf\",\"btn\":\"ContactForm_btn__Z1N8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3twpb\",\"list\":\"ContactList_list__1ylSZ\",\"item\":\"ContactList_item__2w-Rd\",\"text\":\"ContactList_text__Hw7kq\",\"btn\":\"ContactList_btn__9r9jc\"};"],"sourceRoot":""}